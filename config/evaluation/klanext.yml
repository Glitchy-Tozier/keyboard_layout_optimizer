metrics:
  # layout metrics

  kla_home_key_words:
    enabled: false
    weight: 500.0
    normalization:
      type: weight_all
      value: 1.0
    params:
      words_filename: "./english-words-30000.csv"
      min_word_length: 3
      home_row_positions:
        - [2,2]
        - [3,2]
        - [4,2]
        - [5,2]
        - [14,2]
        - [15,2]
        - [16,2]
        - [17,2]

  kla_same_finger_words:
    enabled: true
    weight: 17.0
    normalization:
      type: weight_all
      value: 1.0
    params:
      words_filename: "./english-words-30000.csv"
      min_word_length: 3

  # Distance metric that tries to resemble the one on klanext.keyboard-design.com
  kla_distance:
    enabled: true
    weight: 0.44 # 40 weight * 0.0011 penalty * 10 ?
    normalization:
      type: weight_all
      value: 1.0
    params:
      ignore_modifiers: false
      keyup_distance: 10.5263156
      keydown_distance: 10.5263156
      dscoring:
        Left:
          Pinky: 3.67
          Ring: 2.9
          Middle: 2.0
          Index: 1.85
          Thumb: 1.0
        Right:
          Pinky: 3.67
          Ring: 2.9
          Middle: 2.0
          Index: 1.85
          Thumb: 1.0

      hscoring:
        Left: 1.1
        Right: 1.0

  # Finger usage metric that tries to resemble one from an older version of klanext
  kla_finger_usage:
    enabled: false
    weight: 1
    normalization:
      type: weight_all
      value: 1.0
    params:
      ignore_modifiers: false
      fscoring:
        Left:
          Pinky: 3.67
          Ring: 2.9
          Middle: 2.0
          Index: 1.85
          Thumb: 1.0
        Right:
          Pinky: 3.67
          Ring: 2.9
          Middle: 2.0
          Index: 1.85
          Thumb: 1.0

      hscoring:
        Left: 1.1
        Right: 1.0

  # Same finger metric that tries to resemble the one on klanext.keyboard-design.com
  kla_same_finger:
    enabled: true
    weight: 490.2 # 40 weight * 1.23 penalty * 10 ?
    normalization:
      type: weight_all
      value: 1.0
    params:
      ignore_modifiers: false
      fscoring:
        Left:
          Pinky: 3.67
          Ring: 2.9
          Middle: 2.0
          Index: 1.85
          Thumb: 1.0
        Right:
          Pinky: 3.67
          Ring: 2.9
          Middle: 2.0
          Index: 1.85
          Thumb: 1.0

      hscoring:
        Left: 1.1
        Right: 1.0

  # Same hand metric that tries to resemble the one on klanext.keyboard-design.com
  kla_same_hand:
    enabled: true
    weight: 68.2 # 20 weight * 0.341 penalty * 10 * 0.5?
    normalization:
      type: weight_all
      value: 1.0
    params:
      ignore_modifiers: false
      ignore_thumbs: false
      hscoring:
        Left: 1.1
        Right: 1.0


  # trigram metrics

  # The `irregularity` metric evaluates all bigram metrics that can be computed on individual
  # bigrams (in particular not the finger- and hand-balance metrics) for the first and second half
  # of each trigram. Their cost is multiplied and the square root of the resulting sum is taken.
  irregularity:
    enabled: false
    weight: 8.25
    normalization:
      type: weight_found
      value: 1.0
    params:
      null: null

  # If there is no handswitch in a trigram, a cost is counted. The cost is multiplied by factors
  # depending on whether the three keys corresponding to the trigram are "in line" ("rolling
  # movement") or if there is a directional change.
  no_handswitch_in_trigram:
    enabled: false
    weight: 200.0
    normalization:
      type: weight_found
      value: 1.0
    params:
      # Count this factor if there is a direction change in the trigram
      factor_with_direction_change: 1.0
      # Count this factor if there is no direction change in the trigram
      factor_without_direction_change: 0.0

  # The `secondary_bigrams` metric evaluates all bigram metrics that can be computed on individual
  # bigrams (in particular not the finger- and hand-balance metrics) for the bigram resulting from
  # the first and last symbol of the trigram. Depending on whether the trigram involves a
  # handswitch or not, factors are applied. Trigrams starting with one of a list of specified
  # symbols are excluded.
  secondary_bigrams:
    enabled: false
    weight: 0.1
    normalization:
      type: weight_found
      value: 1.0
    params:
      # Multiply the cost with this factor if no handswitch occurs in the trigram
      factor_no_handswitch: 0.7
      # Multiply the cost with this factor if a handswitch occurs in the trigram
      factor_handswitch: 0.8
      # Mental pauses:
      # Exclude the trirgrams which contain a mental pause and a follow up with a non-pause symbol.
      # These trigrams do not need to be optimized, because they're "designed" to contain a pause.
      # Mental pauses start with one of the defined `initial_pause_indicators` and then contain
      # some kind of whitespace.
      initial_pause_indicators: [",", "."]

  # If all keys corresponding to a trigram are hit by the same finger (and are all unequal), a cost
  # is counted. A factor is multiplied for each bigram with keys belonging to different columns.
  trigram_finger_repeats:
    enabled: false
    weight: 10000.0
    normalization:
      type: weight_found
      value: 1.0
    params:
      # Multiply by this factor for each of the bigrams that have a lateral movement
      factor_lateral_movement: 1.2

  trigram_rolls:
    enabled: false
    weight: 25000.0
    normalization:
      type: weight_found
      value: 1.0
    params:
      # Multiply by this factor for each of the bigrams that have a lateral movement
      factor_inward: 1.0
      factor_outward: 0.2
      exclude_rows: [3]

ngrams:
  # Increase the weight of bigrams that have both an absolute weight and relative weight exceed
  # specified thresholds.
  increase_common_ngrams:
    enabled: false
    # Bigrams with a relative weight exceeding this threshold are considered
    critical_fraction: 0.001
    # The weight for bigrams exceeding both thresholds is multiplied by this factor
    factor: 2.0
    # Bigrams with an absolute weight exceeding this threshold are considered
    total_weight_threshold: 20.0


ngram_mapper:
  # Exclude ngrams that contain a line break, followed by a non-line-break character.
  # This encodes a mental pause which usually comes after hitting the "Enter" key, before
  # continuing to write.
  exclude_line_breaks: false

  # Split symbols belonging to higher layers of the layout into combinations involving modifiers
  # required to activate the layer
  split_modifiers:
    enabled: false
    # Multiply the ngram's weight with this factor whenever the resulting ngram involves two
    # modifiers that are required for the same symbol
    same_key_mod_factor: 0.03125


